language: python
cache: pip
os: linux
dist: xenial

# We are specifying the build matrix manually, since there is too little overlap
# between the different builds:
jobs:
  include:
    - name: "Python 3.6 on Linux"
      python: "3.6"

    - name: "Python 3.7 on Linux"
      python: "3.7"

    - name: "Python 3.8 on Linux"
      python: "3.8"

    - name: "Python 3.6 on Windows"
      os: windows
      language: shell  # 'language: python' is an error on Travis CI Windows
      before_install:
        - choco install python --version 3.6.8
        - python --version
        - git lfs pull
      env: PATH=/c/Python36:/c/Python36/Scripts:$PATH

    - name: "Python 3.7 on Windows"
      os: windows
      language: shell  # 'language: python' is an error on Travis CI Windows
      before_install:
        - choco install python --version 3.7.4
        - python --version
        - git lfs pull
      env: PATH=/c/Python37:/c/Python37/Scripts:$PATH

    - name: "Python 3.8 on Windows"
      os: windows
      language: shell  # 'language: python' is an error on Travis CI Windows
      before_install:
        - choco install python --version 3.8.2
        - python --version
        - git lfs pull
      env:
        - PATH=/c/Python38:/c/Python38/Scripts:$PATH

    - name: "Flake8"
      python: "3.6"
      git:
        lfs_skip_smudge: true
      install:
        - pip install flake8
      script:
        - flake8

  # Allow some newer versions of Python to fail for now
  # This will be changed once the required packages starts
  # supporting the newer versions of Python:
  fast_finish: true
  allow_failures:
    - name: "Flake8"
    - os: windows

# commands to install dependencies
install:
  - python -m pip install --upgrade pip
  - pip install -r requirements.txt
  - pip install codecov pytest-cov
script:
  - pytest --cov=dataval/
after_success:
  - codecov

branches:
  only:
    - master
    - devel
    - /^v\d+\.\d+.*$/

# Deploy to GitHub Releases, making a release of the
# code whenever a new tag is added on the master branch
before_deploy:
  - git stash --all
deploy:
  provider: releases
  token: $GITHUB_TOKEN
  skip_cleanup: true
  draft: true
  name: "${TRAVIS_TAG/v/Version }"
  release_notes: "${TRAVIS_TAG/v/Version }"
  on:
    branch:
      - master
      - /^v\d+\.\d+.*$/
    tags: true
